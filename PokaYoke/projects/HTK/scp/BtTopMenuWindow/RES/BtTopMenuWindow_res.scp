Include "BtTopMenuWindow\Lib\Parts\BtTopMenuWindow_BtButton_Exit"
Include "BtTopMenuWindow\Lib\Parts\BtTopMenuWindow_BtMenuItem_Configuration"
Include "BtTopMenuWindow\Lib\Parts\BtTopMenuWindow_BtMenuItem_PokaYoke"
Include "BtTopMenuWindow\Lib\Parts\BtTopMenuWindow_BtLabel_Title"
Include "BtTopMenuWindow\Lib\Parts\BtTopMenuWindow_BtSystemParameter_Version"
Include "BtTopMenuWindow\Lib\Parts\BtTopMenuWindow_BtLabel_Version"
Include "BtTopMenuWindow\Lib\Utilities\BtTopMenuWindow_FocusTransitionUtility"

Package BtTopMenuWindow_res

Properties[1]

_ctrl[6]
_components[1]

    Method New(parentName)
    Begin
        _ctrl[0] = "BtTopMenuWindow_BtLabel_Title"
        _ctrl[1] = "BtTopMenuWindow_BtMenuItem_PokaYoke"
        _ctrl[2] = "BtTopMenuWindow_BtMenuItem_Configuration"
        _ctrl[3] = "BtTopMenuWindow_BtButton_Exit"
        _ctrl[4] = "BtTopMenuWindow_BtLabel_Version"
        _ctrl[5] = "BtTopMenuWindow_BtSystemParameter_Version"

        Properties[0] = "BtTopMenuWindow"
        BtScreenCommon:New(Properties, parentName)
    End Method

    Method InitializeChildren()
    Begin
        UpdateChildren()
    End Method

    Method UpdateChildren()
    Begin
        BtFormCommon:UpdateChildren(_ctrl, _components)
    End Method

    Method UpdateLogData()
        i
    Begin
        If Not _ctrl[0] is nil Then
            For i = 0 To _ctrl.size - 1
                If ITableView:IsImplemented(_ctrl[i]) Then
                    ITableView:UpdateLogData(_ctrl[i])
                End If
            Next
        End If
        If Not _components[0] is nil Then
            For i = 0 To _components.size - 1
                If IBtMasterCheckControl:IsImplemented(_components[i]) Then
                    IBtMasterCheckControl:UpdateLogData(_components[i])
                End If
            Next
        End If
    End Method

    Method UpdateMasterData()
    Begin
        BtScreenCommon:UpdateMasterData(_ctrl, _components)
    End Method

    Method ReflectMasterCheckSentNum(logDataMaxRowId)
    Begin
        BtScreenCommon:ReflectMasterCheckSentNum(_components, logDataMaxRowId)
    End Method

    Method ReflectMasterCheckSentNumByRealTime()
    Begin
        BtScreenCommon:ReflectMasterCheckSentNumByRealTime(_components)
    End Method

    Method ClearSharedParameter(clearTiming)
    Begin
        BtScreenCommon:ClearSharedParameter(_ctrl, _components, clearTiming)
    End Method

    Method RegisterSharedParameter()
    Begin
        BtScreenCommon:RegisterSharedParameter(_ctrl, _components)
    End Method

    Method UpdateSharedParameterInputTool()
    Begin
        BtFormCommon:UpdateSharedParameterInputTool(_ctrl, _components)
    End Method

    Method UpdateSharedParameter()
    Begin
        BtFormCommon:UpdateSharedParameter(_ctrl)
    End Method

    Method CloseDatabase()
        i
    Begin

        If Not _ctrl[0] is nil Then
            For i = 0 To _ctrl.size - 1
                If IMasterDataOwnerControl:IsImplemented(_ctrl[i]) Then
                    IMasterDataOwnerControl:CloseMasterData(_ctrl[i])
                End If
                If IMasterCheckDataOwnerControl:IsImplemented(_ctrl[i]) Then
                    IMasterCheckDataOwnerControl:CloseMasterCheckData(_ctrl[i])
                End If
            Next
        End If
        If Not _components[0] is nil Then
            For i = 0 To _components.size - 1
                If IMasterDataOwnerControl:IsImplemented(_components[i]) Then
                    IMasterDataOwnerControl:CloseMasterData(_components[i])
                End If
                If IMasterCheckDataOwnerControl:IsImplemented(_components[i]) Then
                    IMasterCheckDataOwnerControl:CloseMasterCheckData(_components[i])
                End If
            Next
        End If
    End Method

    Method MoveFocus(transitionSource, transitionDestination)
        listId_Controls = 0
        listId_Components = 0
        i
    Begin
        listId_Controls = ListTable:CreateList()
        If Not _ctrl[0] is nil Then
            For i = 0 To _ctrl.size - 1
                ListTable:Add(listId_Controls, _ctrl[i], "")
            Next
        End If
        listId_Components = ListTable:CreateList()
        If Not _components[0] is nil Then
            For i = 0 To _components.size - 1
                ListTable:Add(listId_Components, _components[i], "")
            Next
        End If

        If IControl:IsImplemented(transitionSource) Then
            BtTopMenuWindow_FocusTransitionUtility:ResetTargetControls(transitionSource, transitionDestination, listId_Controls, listId_Components)
        ElseIf IBtInputComponent:IsImplemented(transitionSource) Then
            BtTopMenuWindow_FocusTransitionUtility:ResetTargetInputComponents(transitionSource, transitionDestination, listId_Controls, listId_Components)
        End If

        ListTable:DeleteList(listId_Controls)
        ListTable:DeleteList(listId_Components)
        IControl:Focus(transitionDestination)

    End Method

    Method KeyAssignedAction(sender)
        name
    Begin
        name = Properties[0]
        If Not Window<name>:visible Or Not Window<name>:enable Then
            Return()
        End If

        Select Case sender
            Case 0x00000001
                F1KeyAction(sender)
            Case 0x00000002
                F2KeyAction(sender)
            Case 0x00000004
                F3KeyAction(sender)
            Case 0x02000000
                F4KeyAction(sender)
            Case 0x00200000
                LKeyAction(sender)
            Case 0x00400000
                RKeyAction(sender)
        End Select
    End Method

    Method F1KeyAction(eventArgs)
    Begin
    End Method

    Method F2KeyAction(eventArgs)
    Begin
    End Method

    Method F3KeyAction(eventArgs)
    Begin
    End Method

    Method F4KeyAction(eventArgs)
    Begin
    End Method

    Method LKeyAction(eventArgs)
    Begin
    End Method

    Method RKeyAction(eventArgs)
    Begin
    End Method

    Method ResetInvalidInput()
    Begin
    End Method

    Method OnShown()
    Begin
    End Method

    Method OnFormShown()
    Begin
    End Method

    Method OnHiding()
    Begin
    End Method

    Method Dispose()
    Begin
        BtFormCommon:Dispose(_ctrl)
    End Method

    Method Show(value)
    Begin
        BtFormCommon:ShowDisplay(Properties, _ctrl, value)
    End Method

    Method Focus()
    Begin
        BtScreenCommon:Focus(Properties)
    End Method

    Method InitializeTimer()
    Begin
        UserObj<"__SMALL_OBJ__" & StringUtility:GetHandleTagNameEraseSymbol(BtTopMenuWindow_BtSystemParameter_Version:OnTimer)>:Open()
        UserObj<StringUtility:GetHandleTagNameEraseSymbol(BtTopMenuWindow_BtSystemParameter_Version:OnTimer)>:Set(0, BtTopMenuWindow_BtSystemParameter_Version:OnTimer)
        UserObj<StringUtility:GetHandleTagNameEraseSymbol(BtTopMenuWindow_BtSystemParameter_Version:OnTimer)>:Set(1, false)
    End Method
    Method TerminateTimer()
    Begin
        UserObj<StringUtility:GetHandleTagNameEraseSymbol(BtTopMenuWindow_BtSystemParameter_Version:OnTimer)>:Close()
    End Method
    Method OnTimeUp(sender)
    Begin
        If UserObj<StringUtility:GetHandleTagNameEraseSymbol(BtTopMenuWindow_BtSystemParameter_Version:OnTimer)>:Get(1) Then
            UserObj<StringUtility:GetHandleTagNameEraseSymbol(BtTopMenuWindow_BtSystemParameter_Version:OnTimer)>:Exec(0)
        End If
    End Method

    Method InitializeComponent()
    Begin
        New(BtFormCommon:GetName(BtTopMenuWindowForm_res:Properties))
        InitializeTimer()
        With BtTopMenuWindow_res
            BtTopMenuWindow_BtLabel_Title:Create(BtScreenCommon:GetName(:Properties))
            BtTopMenuWindow_BtMenuItem_PokaYoke:Create(BtScreenCommon:GetName(:Properties))
            BtTopMenuWindow_BtMenuItem_Configuration:Create(BtScreenCommon:GetName(:Properties))
            BtTopMenuWindow_BtButton_Exit:Create(BtScreenCommon:GetName(:Properties))
            BtTopMenuWindow_BtLabel_Version:Create(BtScreenCommon:GetName(:Properties))
            BtTopMenuWindow_BtSystemParameter_Version:Create(BtScreenCommon:GetName(:Properties))
        End With

        With BtTopMenuWindow_BtLabel_Version
            BtLabelCommon:SetUseNumberGroupSeparator(:Properties, false)
            BtLabelCommon:SetIsShared(:Properties, false)
            BtLabelCommon:SetSharedParameterKey(:Properties, "")
            BtLabelCommon:SetSharedParameterClearTiming(:Properties, 0x0)
            BtLabelCommon:SetForeColor(:Properties, "0|0|0")
            BtLabelCommon:SetBackColor(:Properties, "255|255|255")
            BtLabelCommon:SetWidth(:Properties, 45)
            BtLabelCommon:SetHeight(:Properties, 25)
            BtLabelCommon:SetLeft(:Properties, 125)
            BtLabelCommon:SetTop(:Properties, 295)
            BtLabelCommon:SetInitialText(:Properties, "ver.")
            BtLabelCommon:SetAlignment(:Properties, "right")
            BtLabelCommon:SetBorderStyle(:Properties, "none")
            BtLabelCommon:SetFontSize(:Properties, 20)
            BtLabelCommon:SetFontName(:Properties, "TT Hira UD Sans Rd Mono StdN W4")
            BtLabelCommon:SetBold(:Properties, false)
            BtLabelCommon:SetTabIndex(:Properties, 4)
            BtLabelCommon:SetVisible(:Properties, true)
        End With

        With BtTopMenuWindow_BtSystemParameter_Version
            BtSystemParameterLabelCommon:SetSystemParameterType(:Properties, 0)
            BtSystemParameterLabelCommon:SetForeColor(:Properties, "0|0|0")
            BtSystemParameterLabelCommon:SetBackColor(:Properties, "255|255|255")
            BtSystemParameterLabelCommon:SetWidth(:Properties, 70)
            BtSystemParameterLabelCommon:SetHeight(:Properties, 25)
            BtSystemParameterLabelCommon:SetLeft(:Properties, 165)
            BtSystemParameterLabelCommon:SetTop(:Properties, 295)
            BtSystemParameterLabelCommon:SetAlignment(:Properties, "right")
            BtSystemParameterLabelCommon:SetBorderStyle(:Properties, "none")
            BtSystemParameterLabelCommon:SetFontSize(:Properties, 20)
            BtSystemParameterLabelCommon:SetFontName(:Properties, "TT Hira UD Sans Rd Mono StdN W4")
            BtSystemParameterLabelCommon:SetBold(:Properties, false)
            BtSystemParameterLabelCommon:SetTabIndex(:Properties, 5)
            BtSystemParameterLabelCommon:SetVisible(:Properties, true)
        End With

        With BtTopMenuWindow_BtLabel_Title
            BtLabelCommon:SetUseNumberGroupSeparator(:Properties, false)
            BtLabelCommon:SetIsShared(:Properties, false)
            BtLabelCommon:SetSharedParameterKey(:Properties, "")
            BtLabelCommon:SetSharedParameterClearTiming(:Properties, 0x0)
            BtLabelCommon:SetForeColor(:Properties, "255|255|255")
            BtLabelCommon:SetBackColor(:Properties, "51|51|51")
            BtLabelCommon:SetWidth(:Properties, 240)
            BtLabelCommon:SetHeight(:Properties, 35)
            BtLabelCommon:SetLeft(:Properties, 0)
            BtLabelCommon:SetTop(:Properties, 0)
            BtLabelCommon:SetInitialText(:Properties, "Menu")
            BtLabelCommon:SetAlignment(:Properties, "center")
            BtLabelCommon:SetBorderStyle(:Properties, "none")
            BtLabelCommon:SetFontSize(:Properties, 30)
            BtLabelCommon:SetFontName(:Properties, "TT Hira UD Sans Rd Mono StdN W4")
            BtLabelCommon:SetBold(:Properties, false)
            BtLabelCommon:SetTabIndex(:Properties, 0)
            BtLabelCommon:SetVisible(:Properties, true)
        End With

        With BtTopMenuWindow_BtMenuItem_PokaYoke
            BtButtonCommon:SetText(:Properties, "PokaYoke")
            BtButtonCommon:SetWidth(:Properties, 230)
            BtButtonCommon:SetHeight(:Properties, 32)
            BtButtonCommon:SetLeft(:Properties, 5)
            BtButtonCommon:SetTop(:Properties, 40)
            BtButtonCommon:SetBorderStyle(:Properties, "thin")
            BtButtonCommon:SetShowFocusedBorder(:Properties, true)
            BtButtonCommon:SetAlignment(:Properties, "center")
            BtButtonCommon:SetForeColor(:Properties, "0|0|0")
            BtButtonCommon:SetBackColor(:Properties, "255|255|255")
            BtButtonCommon:SetFocusedForeColor(:Properties, "0|0|0")
            BtButtonCommon:SetFocusedBackColor(:Properties, "168|255|255")
            BtButtonCommon:SetButtonType(:Properties, 0)
            BtButtonCommon:SetFontSize(:Properties, 30)
            BtButtonCommon:SetFontName(:Properties, "TT Hira UD Sans Rd Mono StdN W4")
            BtButtonCommon:SetBold(:Properties, false)
            BtButtonCommon:SetTabIndex(:Properties, 1)
            BtButtonCommon:SetVisible(:Properties, true)
        End With

        With BtTopMenuWindow_BtMenuItem_Configuration
            BtButtonCommon:SetText(:Properties, "Configuration")
            BtButtonCommon:SetWidth(:Properties, 230)
            BtButtonCommon:SetHeight(:Properties, 32)
            BtButtonCommon:SetLeft(:Properties, 5)
            BtButtonCommon:SetTop(:Properties, 257)
            BtButtonCommon:SetBorderStyle(:Properties, "thin")
            BtButtonCommon:SetShowFocusedBorder(:Properties, true)
            BtButtonCommon:SetAlignment(:Properties, "center")
            BtButtonCommon:SetForeColor(:Properties, "0|0|0")
            BtButtonCommon:SetBackColor(:Properties, "255|255|255")
            BtButtonCommon:SetFocusedForeColor(:Properties, "0|0|0")
            BtButtonCommon:SetFocusedBackColor(:Properties, "168|255|255")
            BtButtonCommon:SetButtonType(:Properties, 0)
            BtButtonCommon:SetFontSize(:Properties, 30)
            BtButtonCommon:SetFontName(:Properties, "TT Hira UD Sans Rd Mono StdN W4")
            BtButtonCommon:SetBold(:Properties, false)
            BtButtonCommon:SetTabIndex(:Properties, 2)
            BtButtonCommon:SetVisible(:Properties, true)
        End With

        With BtTopMenuWindow_BtButton_Exit
            BtButtonCommon:SetText(:Properties, "Exit")
            BtButtonCommon:SetWidth(:Properties, 60)
            BtButtonCommon:SetHeight(:Properties, 29)
            BtButtonCommon:SetLeft(:Properties, 5)
            BtButtonCommon:SetTop(:Properties, 290)
            BtButtonCommon:SetBorderStyle(:Properties, "raised")
            BtButtonCommon:SetShowFocusedBorder(:Properties, true)
            BtButtonCommon:SetAlignment(:Properties, "center")
            BtButtonCommon:SetForeColor(:Properties, "0|0|0")
            BtButtonCommon:SetBackColor(:Properties, "220|220|220")
            BtButtonCommon:SetFocusedForeColor(:Properties, "0|0|0")
            BtButtonCommon:SetFocusedBackColor(:Properties, "220|220|220")
            BtButtonCommon:SetButtonType(:Properties, 0)
            BtButtonCommon:SetFontSize(:Properties, 20)
            BtButtonCommon:SetFontName(:Properties, "TT Hira UD Sans Rd Mono StdN W4")
            BtButtonCommon:SetBold(:Properties, true)
            BtButtonCommon:SetTabIndex(:Properties, 3)
            BtButtonCommon:SetVisible(:Properties, true)
        End With

        With BtTopMenuWindow_res
            BtScreenCommon:SetBackColor(:Properties, "255|255|255")
            BtScreenCommon:SetWidth(:Properties, 240)
            BtScreenCommon:SetHeight(:Properties, 320)
            BtScreenCommon:SetLeft(:Properties, 0)
            BtScreenCommon:SetTop(:Properties, 0)
        End With

    End Method
End Package

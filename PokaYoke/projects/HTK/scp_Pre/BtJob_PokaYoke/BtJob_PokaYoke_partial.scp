// <builder-version>2.3.3.0</builder-version>
#insert "\Lib\Utilities\Enums"
#insert "\Lib\Utilities\CommonConstants"
#insert "\Lib\Utilities\DbAccessConstants"
#insert "\Lib\Utilities\OutputDataUtilityConstants"
#insert "\Lib\Utilities\MessageResources"
#insert "\Lib\Utilities\TerminalSetting"


Package BtJob_PokaYoke_partial
    Method Initialize()
    Begin
        CreateLogFormat(false)
        DeleteBackupLogData()
    End Method
    
    Method DeleteBackupLogData()
        errorMessage
    Begin
        BtJob_PokaYoke_PokaYokeData:DeleteBackupLogData()
        errorMessage = ErrorManager:GetError()
        If (errorMessage ne MESSAGE_ERROR_NONE) Then
            MessageUtility:ShowMessageOk(errorMessage)
            Return()
        End If
    End Method
    
    Method ReflectMasterCheckSentNum(logDataMaxRowId)
    Begin
        
    End Method
    
    Method OpenLogDatabase()
    Begin
        DbAccess:Open(BtDataFormatControlCommon:GetPathDriveLogDataBase(BtJob_PokaYoke_PokaYokeData:Properties), "", "")
    End Method
    
    Method CloseLogDatabase()
    Begin
        DbAccess:Close(BtDataFormatControlCommon:GetPathDriveLogDataBase(BtJob_PokaYoke_PokaYokeData:Properties))
    End Method
    
    Method CreateLogFormat(enableFormatCheck)
        errorMessage
    Begin
        ILogItem:New()
        
        With BtJob_PokaYoke_PokaYokeData
            :New("BtJob_PokaYoke", "PokaYoke.csv", false, 0, 0)
            BtDataFormatControlCommon:SetRecordType(:Properties, DATA_LENGTH_VARIABLE)
            BtDataFormatControlCommon:SetOutputDestination(:Properties, DATA_LOCATION_LOCAL)
            BtDataFormatControlCommon:SetSeparatorType(:Properties, LOG_SEPARATOR_TYPE_COMMA)
        End With
        
        With BtJob_PokaYoke_LogItem_0
            :New("Date", SYSTEM_PARAMETER_TYPE_SYSTEM_DATE)
            LogItemSystemParameterCommon:SetExclusionCharacters(:Properties, EXCLUSION_CHARACTERS_NONE)
            LogItemSystemParameterCommon:SetOutputDoubleQuotation(:Properties, false)
            LogItemSystemParameterCommon:SetDateFormatType(:Properties, DATE_PATTERN_YYYYMMDD)
            LogItemSystemParameterCommon:SetDateSeparatorType(:Properties, DATE_SEPARATOR_SLASH)
        End With
        BtJob_PokaYoke_PokaYokeData:AddLogItem("BtJob_PokaYoke_LogItem_0")
        
        With BtJob_PokaYoke_LogItem_1
            :New("Time", SYSTEM_PARAMETER_TYPE_SYSTEM_TIME)
            LogItemSystemParameterCommon:SetExclusionCharacters(:Properties, EXCLUSION_CHARACTERS_NONE)
            LogItemSystemParameterCommon:SetOutputDoubleQuotation(:Properties, false)
            LogItemSystemParameterCommon:SetTimeFormatType(:Properties, TIME_FORMAT_HOURS_COLON_MINUTES_COLON_SECONDS)
        End With
        BtJob_PokaYoke_PokaYokeData:AddLogItem("BtJob_PokaYoke_LogItem_1")
        
        With BtJob_PokaYoke_LogItem_2
            :New("Serial number", SYSTEM_PARAMETER_TYPE_SERIAL_NUMBER)
            LogItemSystemParameterCommon:SetExclusionCharacters(:Properties, EXCLUSION_CHARACTERS_NONE)
            LogItemSystemParameterCommon:SetOutputDoubleQuotation(:Properties, false)
        End With
        BtJob_PokaYoke_PokaYokeData:AddLogItem("BtJob_PokaYoke_LogItem_2")
        
        With BtJob_PokaYoke_LogItem_3
            :New("Person", "BtJob_PokaYoke", "BtWindow_PokaYoke", "BtWindow_PokaYoke_BtTextBox_Person", false, false, SQ_LITE_FIELD_TYPE_TEXT, 0)
            LogItemScreenDataCommon:SetExclusionCharacters(:Properties, EXCLUSION_CHARACTERS_NONE)
            LogItemScreenDataCommon:SetOutputDoubleQuotation(:Properties, false)
        End With
        BtJob_PokaYoke_PokaYokeData:AddLogItem("BtJob_PokaYoke_LogItem_3")
        
        With BtJob_PokaYoke_LogItem_4
            :New("Master", "BtJob_PokaYoke", "BtWindow_PokaYoke", "BtWindow_PokaYoke_BtTextBox_Compare", false, false, SQ_LITE_FIELD_TYPE_TEXT, 0)
            LogItemScreenDataCommon:SetExclusionCharacters(:Properties, EXCLUSION_CHARACTERS_NONE)
            LogItemScreenDataCommon:SetOutputDoubleQuotation(:Properties, false)
        End With
        BtJob_PokaYoke_PokaYokeData:AddLogItem("BtJob_PokaYoke_LogItem_4")
        
        With BtJob_PokaYoke_LogItem_5
            :New("Check", "BtJob_PokaYoke", "BtWindow_PokaYoke", "BtWindow_PokaYoke_BtTextBox_Input", false, false, SQ_LITE_FIELD_TYPE_TEXT, 0)
            LogItemScreenDataCommon:SetExclusionCharacters(:Properties, EXCLUSION_CHARACTERS_NONE)
            LogItemScreenDataCommon:SetOutputDoubleQuotation(:Properties, false)
        End With
        BtJob_PokaYoke_PokaYokeData:AddLogItem("BtJob_PokaYoke_LogItem_5")
        
        With BtJob_PokaYoke_LogItem_6
            :New("Collation result", "BtJob_PokaYoke", "BtWindow_PokaYoke", "BtWindow_PokaYoke_BtVerifyControl_1", false, false, SQ_LITE_FIELD_TYPE_TEXT, 0)
            LogItemScreenDataCommon:SetExclusionCharacters(:Properties, EXCLUSION_CHARACTERS_NONE)
            LogItemScreenDataCommon:SetOutputDoubleQuotation(:Properties, false)
        End With
        BtJob_PokaYoke_PokaYokeData:AddLogItem("BtJob_PokaYoke_LogItem_6")
        
        BtJob_PokaYoke_PokaYokeData:CreateLogFormatInfo(enableFormatCheck)
        errorMessage = ErrorManager:GetError()
        If (errorMessage ne MESSAGE_ERROR_NONE) Then
            MessageUtility:ShowMessageOk(errorMessage)
            Return (nil)
        End If
    End Method
    
End Package


 Package BtSendDataFileControl

    _properties[3 + 1]

    Method New(transmissionRoute, numberOfRetry, timeout)
    Begin
        _properties[0] = transmissionRoute
        _properties[1] = numberOfRetry
        _properties[2] = timeout
        Return (TransmissionController:Create())
    End Method

    Method Execute(processingId, listId_SendFileNamePairs, checkNoSendingDataError, parentWindow)
        listId_SentFiles = 0
    Begin

        If (TransmissionController:StartTransmitting(processingId) is false) Then
            Return (listId_SentFiles)
        End If

        If (ListTable:Count(listId_SendFileNamePairs) == 0) Then
            If (checkNoSendingDataError is true) Then
                ErrorManager:SetError("There is no data to send.")
            End If
            Return (listId_SentFiles)
        End If

        Window<parentWindow>:enable = false
        TransmittingForm:New("SendDataFile", "Connecting")
        TransmittingForm:Show()

        listId_SentFiles = ExecuteCore(listId_SendFileNamePairs)

        TransmittingForm:Close()
        Window<parentWindow>:enable = true

        If (TransmittingForm:GetErrorMessage() ne "") Then
            ErrorManager:SetError(TransmittingForm:GetErrorMessage())
        End If
        If (TransmittingForm:GetCommunicationError() is true) Then
            ErrorManager:SetCommunicationError()
        End If

        Return (listId_SentFiles)
    End Method

    Method Close(processingId)
    Begin
        TransmissionController:FinishTransmitting(processingId)
    End Method

    Method UpdateTransmittingFormLabel(text)
    Begin
        If (TransmittingForm:GetIsActive() Is false) Then
            Return (nil)
        End If

        TransmittingForm:SetInfomationLabelText(text)
    End Method

    Method ExecuteCore(listId_SendFileNamePairs)
        listId_SentFiles = 0
    Begin
        listId_SentFiles = SendFile(listId_SendFileNamePairs)

        If (TransmissionController:GetIsCancelled() is false) And (ListTable:Count(listId_SentFiles) <> ListTable:Count(listId_SendFileNamePairs)) Then
            ErrorManager:SetCommunicationError()
            Return (listId_SentFiles)
        End If
        Return (listId_SentFiles)
    Catch
        ErrorManager:SetCommunicationError()
        ListTable:DeleteList(listId_SentFiles)
        Return (0)
    End Method

    Method SendFile(listId_SendFileNamePairs)
        index
        localFileName
        remoteFileName
        listId_SentFiles = 0
    Begin

        listId_SentFiles = ListTable:CreateList()

        If (TransmissionController:Connect(_properties[0], _properties[2], _properties[1]) is true) Then

            UpdateTransmittingFormLabel("Sending file")

            For index = 0 To ListTable:Count(listId_SendFileNamePairs) - 1
                localFileName = ListTable:Get(listId_SendFileNamePairs, index, "key")
                remoteFileName = ListTable:Get(listId_SendFileNamePairs, index, "val")

                DbAccess:Close(localFileName)

                If (TransmissionController:PutFile(localFileName, remoteFileName, _properties[2], _properties[1]) is true) Then
                    ListTable:Add(listId_SentFiles, localFileName, "")
                Else
                    Fbreak
                End If
            Next

            TransmissionController:Disconnect(_properties[2], _properties[1])

        End If
        Return (listId_SentFiles)
    End Method

End Package

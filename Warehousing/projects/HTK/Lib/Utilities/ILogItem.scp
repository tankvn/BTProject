#pushdefine

Package ILogItem

#ifdef DEF_IMPLEMENT_NAME_ARRAY
    Names[DEF_IMPLEMENT_NAME_ARRAY@~]
    ICommons[DEF_IMPLEMENT_NAME_ARRAY@~]
#else
    Names[1]
    ICommons[1]
#endif
    
    Method New()
    Begin
#beginexpand DEF_IMPLEMENT_NAME_ARRAY
        Names[@^] = "DEF_IMPLEMENT_NAME_ARRAY"
        ICommons[@^] = DEF_IMPLEMENT_NAME_ARRAY:ILogItemInvoke
#endexpand DEF_IMPLEMENT_NAME_ARRAY
    End Method

    Method IsImplemented(logItemName)
    Begin
        Return(InterfaceCommon:IsImplemented(logItemName, Names))
    End Method

    Method GetLogData(logItemName) /*As String*/
        args[1]
    Begin
        Return(InterfaceCommon:Call(logItemName, Names, "GetLogData", args, ICommons))
    End Method

    Method GetLogDataIndex(logItemName) /*As String*/
        args[1]
    Begin
        Return(InterfaceCommon:Call(logItemName, Names, "GetLogDataIndex", args, ICommons))
    End Method

    Method GetLogItemTypeInfo(logItemName) /*As String*/
        args[1]
    Begin
        Return(InterfaceCommon:Call(logItemName, Names, "GetLogItemTypeInfo", args, ICommons))
    End Method

    Method GetTableItemName(logItemName) /*As String*/
        args[1]
    Begin
        Return(InterfaceCommon:Call(logItemName, Names, "GetTableItemName", args, ICommons))
    End Method

    Method GetTableItemTypes(logItemName) /*As String*/
        args[1]
    Begin
        Return(InterfaceCommon:Call(logItemName, Names, "GetTableItemTypes", args, ICommons))
    End Method

    Method GetIsDate(logItemName) /*As Boolean*/
        args[1]
    Begin
        Return(InterfaceCommon:Call(logItemName, Names, "GetIsDate", args, ICommons))
    End Method

    Method GetIsTime(logItemName) /*As Boolean*/
        args[1]
    Begin
        Return(InterfaceCommon:Call(logItemName, Names, "GetIsTime", args, ICommons))
    End Method

    Method GetLogItemType(logItemName)
        args[1]
    Begin
        Return(InterfaceCommon:Call(logItemName, Names, "GetLogItemType", args, ICommons))
    End Method

    Method SetLogItemId(logItemName, id)
        args[1]
    Begin
        args[0] = id
        InterfaceCommon:Call(logItemName, Names, "SetLogItemId", args, ICommons)
    End Method

    Method GetOutputDigit(logItemName)
        args[1]
    Begin
        Return(InterfaceCommon:Call(logItemName, Names, "GetOutputDigit", args, ICommons))
    End Method

    Method GetIsIndexColumn(logItemName)
        args[1]
    Begin
        Return(InterfaceCommon:Call(logItemName, Names, "GetIsIndexColumn", args, ICommons))
    End Method



    Method IsFormatChanged(logItemName, databaseName, index)
        args[2]
    Begin
        args[0] = databaseName
        args[1] = index
        Return(InterfaceCommon:Call(logItemName, Names, "IsFormatChanged", args, ICommons))
    End Method

    Method AddLogItemInfo(logItemName, databaseName, index)
        args[2]
    Begin
        args[0] = databaseName
        args[1] = index
        Return(InterfaceCommon:Call(logItemName, Names, "AddLogItemInfo", args, ICommons))
    End Method

    Method GetFormattedLogDataCsv(logItemName, dataLength, value)
        args[2]
    Begin
        args[0] = dataLength
        args[1] = value
        Return(InterfaceCommon:Call(logItemName, Names, "GetFormattedLogDataCsv", args, ICommons))
    End Method

    Method GetFormattedLogDataDb(logItemName, dataLength, value)
        args[2]
    Begin
        args[0] = dataLength
        args[1] = value
        Return(InterfaceCommon:Call(logItemName, Names, "GetFormattedLogDataDb", args, ICommons))
    End Method

    Method GetDisplayName(logItemName)
        args[1]
    Begin
        Return(InterfaceCommon:Call(logItemName, Names, "GetDisplayName", args, ICommons))
    End Method
End Package

#popdefine
